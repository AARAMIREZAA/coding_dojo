{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IDK\\\\Documents\\\\CodingDojo\\\\MERN\\\\REACT\\\\coreAssingments\\\\lukeApi\\\\apiluke\\\\src\\\\pages\\\\Planets.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Planets = () => {\n  _s();\n\n  const [planets, setPlanets] = useState();\n  const {\n    planets_id\n  } = useParams();\n  useEffect(() => {\n    axios.get(`https://swapi.dev/api/planets/${planets_id}`).then(response => {\n      console.log(response.data);\n      setPlanets(response.data);\n    }).catch(error => console.log(error));\n  }, [planets_id]);\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: \"Planets.jsx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), planets ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Name: \", planets.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Climate: \", planets.climate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Terrain: \", planets.terrain]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Surface Water: \", planets.surface_water]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Population: \", planets.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Planets, \"xRkAIEBIQarRgojEkHlm4x8zRp0=\", false, function () {\n  return [useParams];\n});\n\n_c = Planets;\nexport default Planets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","Planets","planets","setPlanets","planets_id","get","then","response","console","log","data","catch","error","name","climate","terrain","surface_water","population"],"sources":["C:/Users/IDK/Documents/CodingDojo/MERN/REACT/coreAssingments/lukeApi/apiluke/src/pages/Planets.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nconst Planets = () => {\r\n\r\n    const [planets, setPlanets] = useState()\r\n\r\n    const { planets_id } = useParams()\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`https://swapi.dev/api/planets/${planets_id}`)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                setPlanets(response.data)\r\n            })\r\n            .catch(error => console.log(error))\r\n    }, [planets_id])\r\n    return (\r\n        <fieldset>\r\n            <legend>Planets.jsx</legend>\r\n            {\r\n                (planets) ?\r\n                    <>\r\n                        <h1>Name: {planets.name}</h1>\r\n                        <h1>Climate: {planets.climate}</h1>\r\n                        <h1>Terrain: {planets.terrain}</h1>\r\n                        <h1>Surface Water: {planets.surface_water}</h1>\r\n                        <h1>Population: {planets.population}</h1>\r\n                        \r\n                    </> : <h1>Loading....</h1>\r\n            }\r\n        </fieldset>\r\n    )\r\n}\r\n\r\nexport default Planets"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAElB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,EAAtC;EAEA,MAAM;IAAEM;EAAF,IAAiBL,SAAS,EAAhC;EAEAF,SAAS,CAAC,MAAM;IAEZG,KAAK,CAACK,GAAN,CAAW,iCAAgCD,UAAW,EAAtD,EACKE,IADL,CACUC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;MACAP,UAAU,CAACI,QAAQ,CAACG,IAAV,CAAV;IACH,CAJL,EAKKC,KALL,CAKWC,KAAK,IAAIJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CALpB;EAMH,CARQ,EAQN,CAACR,UAAD,CARM,CAAT;EASA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAGSF,OAAD,gBACI;MAAA,wBACI;QAAA,qBAAWA,OAAO,CAACW,IAAnB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,wBAAcX,OAAO,CAACY,OAAtB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,wBAAcZ,OAAO,CAACa,OAAtB;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAA,8BAAoBb,OAAO,CAACc,aAA5B;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAA,2BAAiBd,OAAO,CAACe,UAAzB;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA,gBADJ,gBAQU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXlB;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CA/BD;;GAAMhB,O;UAIqBF,S;;;KAJrBE,O;AAiCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}